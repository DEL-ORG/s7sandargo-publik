version: '3'

services:
  petclinic:
    build:
      context: .
      dockerfile: Dockerfile.multi
    environment:
      - SERVER_PORT=8080
      - MYSQL_URL=jdbc:mysql://mysql/petclinic
    ports:
      - "112221:8220"
      - "9999:8080"
    volumes:
      - pet-data:/app
    networks:
      - neu
    depends_on:
      - mysql
      - redis-0
    restart: always

  mysql:
    image: alpine
    ports:
      - "3366:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - neu
    restart: always

  redis-0:
    image: redis:4.0.2
    volumes:
      - redis-0:/etc/redis/redis.conf
    networks:
      - neu
    depends_on: 
      - sentinel-0  
    restart: always

  redis-1:
    image: redis:4.0.2
    volumes:
      - redis-1:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - neu
    restart: always

  redis-2:
    image: redis:4.0.2
    volumes:
      - redis-2:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - neu
    restart: always

  sentinel-0:
    image: redis:4.0.2
    volumes:
      - sentinel-0:/etc/redis/sentinel.conf
    command: redis-sentinel /etc/redis/sentinel.conf
    networks:
      - neu
    restart: always

  sentinel-1:
    image: redis:4.0.2
    volumes:
      - sentinel-1:/etc/redis/sentinel.conf
    command: redis-sentinel /etc/redis/sentinel.conf
    networks:
      - neu
    restart: always

  sentinel-2:
    image: redis:4.0.2
    volumes:
      - sentinel-2:/etc/redis/sentinel.conf
    command: redis-sentinel /etc/redis/sentinel.conf
    networks:
      - neu
    restart: always

networks:
  neu:
    driver: bridge

volumes:
  pet-data:
  mysql-data:
  redis-0:
  redis-1:
  redis-2:
  sentinel-0:
  sentinel-1:
  sentinel-2:
